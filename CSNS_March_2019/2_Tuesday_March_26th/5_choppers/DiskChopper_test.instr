/*******************************************************************************
* Instrument: DiskChopper_test
*
* %I
* Written by: Peter Willendrup <pkwi@fysik.dtu.dk>
* Date: 20190326
* Origin: DTU
* %INSTRUMENT_SITE: Tests
*
* Example instrument illustrating the use of the DiskChopper component
*
* %D
* Example instrument illustrating the use of the DiskChopper component
*
* Examples: 
*     with guide: mcrun DiskChopper_test GUIDE=1
*  without guide: mcrun DiskChopper_test GUIDE=0
*
* %P
* lambda0: [AA]   Mean wavelength emitted from the source
* dlambda: [AA]   Spread wavelength emitted from the source
* t0:      [s]    Chopper initial opening time - corrected for half passage time
* nu:      [Hz]   Chopper frequency
* nslit:   [1]    Number of equidistantly placed slits
* tmax:    [mu-s] Maxmum ToF to measure on monitors
* theta_0: [deg]  Chopper opening angle
* radius:  [m]    source size -circle radius for source_simple, square radius x radius for Source_Maxwell_3
* focus:   [m]    Beam size W x H at source focal point - at chopper with GUIDE=0 and at guide entrance with GUIDE=1
* GUIDE:   [1]    Use a guide or not. 0 means no guide, 1 means insert guide.
* SIMPLE:  [1]    Use Source_simple =1 or Source_Maxwell_3 =0. In case of Source_Maxwell_3 the intensity corresponds to PSI cold source

* %L
* <reference/HTML link>
*
* %E
*******************************************************************************/
DEFINE INSTRUMENT DiskChopper_test(lambda0=4,dlambda=3.99,t0=0.01,nu=25, nslit=1, tmax=25000,theta_0=20,radius=0.01,focus=0.01, GUIDE=0, SIMPLE=1)

DECLARE
%{
  double t_pass;
  double v_min,v_max;
  double l_min,l_max;
  double src_focal_length;
%}

INITIALIZE
%{
  t_pass=theta_0/360/nu;
  printf("Calculated pass time to be %g mu-s\n",t_pass*1e6);
  printf("Given the wanted t0, chopper should be open in interval [%g %g] mu-s\n",t0*1e6, (t0+t_pass)*1e6);
  v_max=10.0/t0; v_min=10.0/(t0+t_pass);
  l_min=2*PI/(v_max*V2K);
  l_max=2*PI/(v_min*V2K);
  printf("Speed of first and last neutron are hence ~ v_max=%g m/s and v_min=%g m/s\n",v_max,v_min);
  printf("Wavelength of first and last neutron are hence ~ l_min=%g AA and l_max=%g AA\n",l_min,l_max);
  if (GUIDE) {
    src_focal_length=1;
  }  else {
    src_focal_length=10;
  }
%}

TRACE

COMPONENT origin = Progress_bar()
AT (0, 0, 0) RELATIVE ABSOLUTE

// insert components here (e.g. Insert -> Source -> ...)
COMPONENT source_simple = Source_simple(
    radius=radius, 
    dist=src_focal_length, 
    focus_xw=focus, 
    focus_yh=focus, 
    lambda0=lambda0, 
    dlambda=dlambda)
  WHEN (SIMPLE)  AT (0, 0, 0) RELATIVE PREVIOUS

COMPONENT source_max = Source_Maxwell_3(
    xwidth=2*radius, 
    yheight=2*radius,
    dist=src_focal_length, 
    focus_xw=focus, 
    focus_yh=focus, 
    Lmin=lambda0-dlambda/2.0, 
    Lmax=lambda0+dlambda/2.0,
    T1=150.42,I1 = 3.67e11,
    T2=38.74,I2 = 3.64e11,
    T3=14.84,I3 = 0.95e11)
  WHEN (!SIMPLE)  AT (0, 0, 0) RELATIVE PREVIOUS

  
COMPONENT toflambda_monitor1mm = TOFLambda_monitor(
    nL=128, 
    tmin=0, 
    tmax=tmax, 
    filename="TOFLambda1mm", 
    Lmin=0, 
    Lmax=8, xwidth=radius*2.0, yheight=radius*2.0)
AT (0, 0, 0.001) RELATIVE source_simple

COMPONENT toflambda_monitor1m = TOFLambda_monitor(
    nL=128, 
    tmin=0, 
    tmax=tmax, 
    filename="TOFLambda1m", 
    Lmin=0, 
    Lmax=8,xwidth=radius*2.0, yheight=radius*2.0)
AT (0, 0, 0.9999) RELATIVE source_simple

  COMPONENT Guide = Guide(w1=focus,h1=focus,l=8.999,m=6)
  WHEN (GUIDE)  AT (0,0,1) RELATIVE source_simple
  
COMPONENT toflambda_monitorPre = TOFLambda_monitor(
    nL=128, 
    tmin=0, 
    tmax=tmax, 
    filename="TOFLambdaBeforeDisk", 
    Lmin=0, 
    Lmax=8,xwidth=focus, yheight=focus)
AT (0, 0, 9.9999) RELATIVE source_simple

COMPONENT diskchopper = DiskChopper(
    theta_0=theta_0, 
    yheight=0.2, 
    nu=nu, 
    nslit=nslit, 
    delay=t0+t_pass/2)
AT (0, 0, 10) RELATIVE source_simple

COMPONENT toflambda_monitorPost = TOFLambda_monitor(
    nL=128, 
    tmin=0, 
    tmax=tmax, 
    filename="TOFLambdaAfterDisk", 
    Lmin=0, 
    Lmax=8,xwidth=focus, yheight=focus)
AT (0, 0, 0.0001) RELATIVE PREVIOUS

COMPONENT tofPost = TOF_monitor(
    nt=128, 
    tmin=0, 
    tmax=tmax, 
    filename="TOFAfterDisk",xwidth=focus, yheight=focus)
AT (0, 0, 0.0001) RELATIVE PREVIOUS

COMPONENT LambdaPost = L_monitor(
    nL=128, 
    Lmin=0, 
    Lmax=8, 
    filename="LamAfterDisk",xwidth=focus, yheight=focus)
AT (0, 0, 0.0001) RELATIVE PREVIOUS

COMPONENT Guide2 = Guide(w1=focus,h1=focus,l=8.999,m=6)
  WHEN(GUIDE) AT (0,0,0.001) RELATIVE PREVIOUS
  
  COMPONENT Dummy_PSD = PSD_monitor(filename="Beam_at_far_away", xwidth=1,yheight=1)
  AT (0,0,9.001) RELATIVE Guide2
FINALLY
%{
%}

END
