/*******************************************************************************
*         McStas instrument definition URL=http://www.mcstas.org
*
* Instrument: test (rename also the example and DEFINE lines below)
*
* %Identification
* Written by: Peter Willendrup
* Date: October 2024
* Origin: DTU
* Release: McStas 3.5.1
* Version: 0.2
* %INSTRUMENT_SITE: Necsa_training
*
* Instrument containing a velocity selector for later use in SANS
*
* %Description
* Instrument containing a velocity selector for later use in SANS
*
* %Parameters
* source_lam_min: [AA] Minimum wavelength produced at the source
* source_lam_max: [AA] Maximum wavelength produced at the source
* lambda: [AA] Wavelength to let through the selector
*
* %Link
* A reference/HTML link for more information
*
* %End
*******************************************************************************/

/* Change name of instrument and input parameters with default values */
DEFINE INSTRUMENT selector(source_lam_min=5,source_lam_max=7,lambda=6)

DECLARE %{
  // Late in the exercise following line should be uncommented
  double f;
  double alpha;
  double V;
  double L;
%}

INITIALIZE %{
  alpha=42.298;
  V=3956/lambda;
  L=0.25;
  // This section should later contain your equation for $f(\lambda)
  f=(alpha/360) * (V/L);
  printf("lambda=%g, V=%g, f=%g\n",lambda,V,f);
  if(lambda < source_lam_min || lambda > source_lam_max) {
    fprintf(stderr,"ERROR: Mono wavelength %g is not in interval from source [%g %g]\n",lambda,source_lam_min,source_lam_max);
    exit(-1);
  }
%}

TRACE

/* The Arm() class component defines reference points and orientations  */
/* in 3D space. Every component instance must have a unique name. Here, */
/* Origin is used. This Arm() component is set to define the origin of  */
/* our global coordinate system (AT (0,0,0) ABSOLUTE). It may be used   */
/* for further RELATIVE reference, Other useful keywords are : ROTATED  */
/* EXTEND GROUP PREVIOUS. Also think about adding a neutron source !    */
/* Progress_bar is an Arm displaying simulation progress.               */
COMPONENT Origin = Progress_bar()
  AT (0,0,0) ABSOLUTE


COMPONENT Source = Source_simple(
    radius = 0.12, dist = 1.5, focus_xw = 0.06, focus_yh = 0.06,
    lambda0 = (source_lam_max+source_lam_min)/2.0, dlambda = (source_lam_max-source_lam_min)/2.0)
  AT (0, 0, 0) RELATIVE Origin

COMPONENT Lmon0 = L_monitor(filename="LmonSource", nL=100, Lmin=0.99, Lmax=10.01, xwidth=0.1, yheight=0.1)
  AT (0, 0, 0) RELATIVE Origin

COMPONENT Guide = Guide(
    w1 = 0.06, h1 = 0.06, w2 = 0.06, h2 = 0.06, l = 20, m = 3)
  AT (0, 0, 1.5) RELATIVE Source

COMPONENT Lmon1 = L_monitor(filename="LmonGuide", nL=100, Lmin=0.99, Lmax=10.01, xwidth=0.1, yheight=0.1)
  AT (0, 0, 20.001) RELATIVE Guide

COMPONENT Vel = V_selector(xwidth=0.03, yheight=0.05, zdepth =0.30, radius=0.12, alpha = alpha,
           length=L, d=0.0004, nu=f, nslit=72)
  AT (0, 0, 0.3) RELATIVE PREVIOUS

COMPONENT Lmon2 = L_monitor(filename="LmonVel", nL=100, Lmin=0.99, Lmax=10.01, xwidth=0.1, yheight=0.1)
  AT (0, 0, 0.3) RELATIVE PREVIOUS


/* This section is executed when the simulation ends (C code). Other    */
/* optional sections are : SAVE                                         */
FINALLY
%{
%}
/* The END token marks the instrument definition end */
END

