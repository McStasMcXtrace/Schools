/*******************************************************************************
*         McStas instrument definition URL=http://www.mcstas.org
*
* Instrument: POWTOF_solution
*
* %Identification
* Written by: Linda Udby udby@fys.ku.dk
* Date: June 6th 2011
* Origin: University of Copenhagen
* Release: McStas CVS-080208
* Version: 0.2
* %INSTRUMENT_SITE: ESS_thermal_powder
*
* Instrument short description
*
* %Description
* Instrument longer description (type, elements, usage...)
*
* Example: mcrun test.instr <parameters=values>
*
* %Parameters
* Par1: [unit] Parameter1 description
*
* %Link
* A reference/HTML link for more information
*
* %End
*******************************************************************************/

DEFINE INSTRUMENT POWTOF_solution(Lmin=0.5, Wavelength_band=4.5, two_theta=90, npulses=1, guide_angle=-0.78)

/* The DECLARE section allows us to declare variables or  small      */
/* functions in C syntax. These may be used in the whole instrument. */
DECLARE
%{
int npulses_declare;
double Lmax;
double Lcenter;
double speed;
double delay;
%}

/* The INITIALIZE section is executed when the simulation starts     */
/* (C code). You may use them as component parameter values.         */
INITIALIZE
%{
npulses_declare=npulses;
Lmax = Lmin + Wavelength_band;
    
// Calculate delay
Lcenter = Lmin + 0.5*Wavelength_band; // Mid point for wavelength band
speed = 2*PI/Lcenter*K2V; // Speed of neutrons in center of band
delay = 6.5/speed; // Delay from t=0 to center of wavelength band reaches 6.5 m
delay = delay + 1.340E-3; // Reset t_0 to center of pulse
%}

/* Here comes the TRACE section, where the actual      */
/* instrument is defined as a sequence of components.  */
TRACE

COMPONENT Origin = Progress_bar()
AT (0,0,0) ABSOLUTE

/*
COMPONENT Source = Source_simple(
  xwidth=0.03, yheight=0.03,
  focus_xw=0.03, focus_yh=0.03, dist=160,
  lambda0=Lmin + 0.5*Wavelength_band, dlambda=0.5*Wavelength_band, flux=1E13)
AT (0,0,0) RELATIVE Origin
EXTEND %{
    double t_between_pulses=1.0/14.0;
    double pulse_n=(double) floor(rand01()*npulses_declare);
    double pulse_delay=t_between_pulses*pulse_n;
    
    t=2860*rand01()*1E-6 + pulse_delay; // Square time distribution centered at 1430 us
%}
*/

COMPONENT Source = ESS_butterfly(
  yheight=0.03, cold_frac=0.5,
  focus_xw=0.05, focus_yh=0.05, dist=2.0,
  Lmin=Lmin, Lmax=Lmax,
  acc_power=2.0, n_pulses=npulses)
AT (0,0,0) RELATIVE Origin

COMPONENT TOFmon1 = TOF_monitor(
  xwidth=0.02, yheight=0.02,
  nt=100, tmin=0, tmax=5000,
  filename="TOFmon1", restore_neutron=1)
AT (0, 0, 1e-6) RELATIVE Source

COMPONENT TOFLambda1 = TOFLambda_monitor(
  xwidth=0.02, yheight=0.02,
  nt=200, tmin=0, tmax=5000,
  nL=100, Lmin=0.1, Lmax=5,
  filename="TOFLambda1", restore_neutron=1)
AT (0, 0, 1e-6) RELATIVE Source


COMPONENT PSD = PSD_monitor(
    filename="PSD", xwidth=0.03, yheight=0.03)
AT (0, 0, 0.5) RELATIVE Source

COMPONENT guide_pre_chopper = Elliptic_guide_gravity(
  xwidth=0.075, yheight=0.075, dimensionsAt="mid",
  linxw=2.0, linyh=2.0, loutxw=160-2.0, loutyh=160-2.0,
  m=5, alpha=4.0, l=4.45)
AT (0, 0, 2) RELATIVE Source
ROTATED (0, guide_angle, 0) RELATIVE Source

COMPONENT chopper = DiskChopper(
  radius=0.35, yheight=0.03, theta_0=4.0,
  nu=2*14.0, delay=delay)
AT (0, 0, 4.45) RELATIVE guide_pre_chopper

COMPONENT counter_chopper = DiskChopper(
  radius=0.35, yheight=0.03, theta_0=4.0,
  nu=-2*14.0, delay=delay)
AT (0, 0, 0.001) RELATIVE chopper

COMPONENT TOFmon2 = TOF_monitor(
  xwidth=0.02, yheight=0.02,
  nt=100, tmin=0, tmax=12000,
  filename="TOFmon2", restore_neutron=1)
AT (0, 0, 0.002) RELATIVE chopper

COMPONENT TOFLambda2 = TOFLambda_monitor(
  xwidth=0.02, yheight=0.02,
  nt=200, tmin=0, tmax=12000,
  nL=100, Lmin=0.1, Lmax=5,
  filename="TOFLambda2", restore_neutron=1)
AT (0, 0, 0.002) RELATIVE chopper

COMPONENT guide_post_chopper = Elliptic_guide_gravity(
  xwidth=0.075, yheight=0.075, dimensionsAt="mid",
  linxw=6.51, linyh=6.51, loutxw=0.5, loutyh=0.5,
  m=5, alpha=4.0, l=160-0.5-6.51)
AT (0, 0, 4.50) RELATIVE guide_pre_chopper

COMPONENT sample_position = Arm()
AT (0, 0, 160-2) RELATIVE guide_pre_chopper

COMPONENT TOFmon3 = TOF_monitor(
  xwidth=0.02, yheight=0.02,
  nt=200, tmin=0, tmax=220000,
  filename="TOFmon3", restore_neutron=1)
AT (0, 0, 0) RELATIVE sample_position

COMPONENT TOFLambda3 = TOFLambda_monitor(
  xwidth=0.02, yheight=0.02,
  nt=200, tmin=0, tmax=220000,
  nL=100, Lmin=0.1, Lmax=5,
  filename="TOFLambda3", restore_neutron=1)
AT (0, 0, 0) RELATIVE sample_position

/*
COMPONENT Sample = PowderN(
  radius=0.003, yheight=0.02, d_phi=12,
  reflections="Y2O3.laz")
AT (0, 0, 160) RELATIVE Source
 */
COMPONENT Sample = Powder1(
  radius=0.003, yheight=0.02, q=5, d_phi=12)
AT (0, 0, 0) RELATIVE sample_position

COMPONENT beamstop = Beamstop(
  radius=0.2)
AT (0, 0, 0.5) RELATIVE sample_position


COMPONENT TOF_cylPSD = TOF_cylPSD_monitor(
  radius=2.0, yheight=0.20, nphi=360,
  nt=300, tmin=0, tmax=100000,
  filename="TOF_cylPSD", restore_neutron=1)
AT (0, 0, 0) RELATIVE sample_position

COMPONENT TOF2Q = NPI_tof_dhkl_detector(
  radius=2.0, yheight=0.20, zdepth=0.001,
  na=360, amin=0, amax=180,
  nd=250, nt=2000,
  time0=delay, Lc=6.4925, Linst=161,
  filename="TOF2Q", restore_neutron=1)
AT (0, 0, 0) RELATIVE sample_position


COMPONENT TOFdetArm = Arm()
AT (0, 0, 0) RELATIVE Sample
ROTATED (0, two_theta, 0) RELATIVE sample_position

COMPONENT TOFdet = TOF_monitor(
  xwidth=0.01, yheight=0.2,
  tmin=70000, tmax=80000, nt=100,
  filename="TOFdet", restore_neutron=1)
AT (0, 0, 2.001) RELATIVE TOFdetArm


	

/* This section is executed when the simulation ends (C code). Other    */
/* optional sections are : SAVE                                         */
FINALLY
%{
%}
/* The END token marks the instrument definition end */
END








